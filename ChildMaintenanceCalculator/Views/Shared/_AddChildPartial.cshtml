@using ChildMaintenanceCalculator.Models.ViewModels;
@using HtmlHelpers.BeginCollectionItemCore;
@model Step1Child;

@{
    string parentHtmlFieldPrefix = Html.ViewData.TemplateInfo.HtmlFieldPrefix;
    string childIndex = ViewData.ContainsKey("childIndex") ? ViewData["childIndex"].ToString() : "0";
    int childId = int.Parse(childIndex) + 1;
    string childHtmlId = $"{parentHtmlFieldPrefix}.Child[{childIndex}]";
    string collectionNamePrefix = (bool)ViewData["firstChild"] ? "" : parentHtmlFieldPrefix + ".";
}

@{
    using (Html.BeginCollectionItem(collectionNamePrefix + "Step1Children"))
    {
        <div id="@($"addChild{childId}")" class="add-child-div form-block">
            <!--TODO: Give this a dynamic index based ID-->
            
            <div>
                <label class="child-title">Child @(childId)</label>
                <input asp-for="Id" type="hidden" value="@childId" />
            </div>
            
            <div class="form-field">
                <label class="form-label">What is the child's first name?</label>
                <div>
                    <input asp-for="FirstName" />
                </div>
            </div>

            <div class="form-field">
                <label class="form-label">Are there any pre-existing arrangements for this child?</label>
                <div>
                    <input asp-for="PreExistingArrangements" />
                </div>
            </div>
            
            <!--TODO: Make this conditionally visible dependinh on checkbox above-->
            <div class="form-field">
                <label class="form-label">How much is paid per week is paid to the receiving parent for this child?</label>
                <div>
                    <input asp-for="PreExisingArrangementsAmount" />
                </div>
            </div>


        </div>
    }
}