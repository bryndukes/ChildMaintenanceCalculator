@using ChildMaintenanceCalculator.Models.ViewModels;
@using HtmlHelpers.BeginCollectionItemCore;
@model Step1Child;

@{
    string parentHtmlFieldPrefix = Html.ViewData.TemplateInfo.HtmlFieldPrefix;
    string childIndex = ViewData.ContainsKey("childIndex") ? ViewData["childIndex"].ToString() : "0";
    int childId = int.Parse(childIndex) + 1;
    string childHtmlId = $"{parentHtmlFieldPrefix}.Child[{childIndex}]";
    string collectionNamePrefix = (bool)ViewData["firstChild"] ? "" : parentHtmlFieldPrefix + ".";
}

@{
    using (Html.BeginCollectionItem(collectionNamePrefix + "Step1Children"))
    {
        <div id="@($"addChild{childId}")" class="addChildDiv">
            <!--TODO: Give this a dynamic index based ID-->

            <h2>Child @(childId)</h2>
            <input asp-for="Id" type="hidden" value="@childId" />

            <label>First Name</label>
            <input asp-for="FirstName" />
            <br />

            <label>Pre-existing Arrangements?</label>
            <input asp-for="PreExistingArrangements"/>
            <br />

            <label>Pre-existing Arrangements Amount</label>
            <input asp-for="PreExisingArrangementsAmount" />

        </div>
    }
}