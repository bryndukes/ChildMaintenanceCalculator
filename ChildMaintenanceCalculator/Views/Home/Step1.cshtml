@using ChildMaintenanceCalculator.Models.ViewModels;

@model Step1ViewModel;
        

<form id="step1" asp-controller="Home" asp-action="Step1" method="post">


    @{
        int receivingParentIndex = 0;
        int childIdIndex = 1;
        foreach (Step1ReceivingParent receivingParent in Model.Step1ReceivingParents)
        {
            <div id="addReceivingParent">
                <!--Give this a dynamic index based ID-->

                <h2>Receiving Parent @(receivingParentIndex + 1)</h2>
                <input asp-for="Step1ReceivingParents[receivingParentIndex].Id" type="hidden" value="@(receivingParentIndex+ 1)"/>

                <label>First Name</label>
                <input asp-for="Step1ReceivingParents[receivingParentIndex].FirstName"/>

                @{
                    int childIndex = 0;
                    foreach (Step1Child child in receivingParent.Step1Children)
                    {

                        <div id="addChild">
                            <!--Give this a dynamic index based ID-->

                            <h2>Child @(childIdIndex)</h2>
                            <input asp-for="Step1ReceivingParents[receivingParentIndex].Step1Children[childIndex].Id" type="hidden" value="@(childIdIndex)"/>

                            <label>First Name</label>
                            <input asp-for="Step1ReceivingParents[receivingParentIndex].Step1Children[childIndex].FirstName" />
                            <br />

                            <label>Pre-existing Arrangements?</label>
                            <input asp-for="Step1ReceivingParents[receivingParentIndex].Step1Children[childIndex].PreExistingArrangements" />
                            <br />

                            <label>Pre-existing Arrangements Amount</label>
                            <input asp-for="Step1ReceivingParents[receivingParentIndex].Step1Children[childIndex].PreExisingArrangementsAmount" />

                        </div>

                        childIndex++;
                        childIdIndex++;
                    }
                }

            </div>

            receivingParentIndex++;

        }
    }

    <button type="submit">Next</button>

</form>

