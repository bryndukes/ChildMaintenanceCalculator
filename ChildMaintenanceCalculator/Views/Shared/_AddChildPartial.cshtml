@using ChildMaintenanceCalculator.Models.ViewModels;
@using HtmlHelpers.BeginCollectionItemCore;
@model Step1Child;

@{
    string parentHtmlFieldPrefix = Html.ViewData.TemplateInfo.HtmlFieldPrefix;
    string childIndex = ViewData.ContainsKey("childIndex") ? ViewData["childIndex"].ToString() : "0";
    int childId = int.Parse(childIndex) + 1;
    string childHtmlId = $"{parentHtmlFieldPrefix}.Child[{childIndex}]";
    string collectionNamePrefix = (bool) ViewData["firstChild"] ? "" : parentHtmlFieldPrefix + ".";
}

@{

    <div id="@($"addChild{childId}")" class="add-child-div child-block">
        <!--TODO: Give this a dynamic index based ID-->

        @using (Html.BeginCollectionItem(collectionNamePrefix + "Step1Children"))
        {
            <div>
                <label class="child-title">Child @(childId)</label>
                <input asp-for="Id" type="hidden" value="@childId"/>
            </div>

            <div class="form-horizontal-row">

                <div class="form-field horizontal-field">
                    <label class="form-label">First name</label>
                    <div class="input-div">
                        <input asp-for="FirstName"/>
                    </div>
                    <div>
                        <span class="horizontal-field-validation" asp-validation-for="FirstName"></span>
                    </div>
                </div>

                <div class="form-field horizontal-field">
                    <label class="form-label">Pre-existing arrangements</label>
                    <div class="input-div">
                        @Html.RadioButtonFor(m => m.PreExistingArrangements, true, new {@checked = Model.PreExistingArrangements ? "checked" : string.Empty, OnChange = $"preExistingArrangementsChanged(true, {childId})"}) Yes
                        @Html.RadioButtonFor(m => m.PreExistingArrangements, false, new {@checked = Model.PreExistingArrangements ? string.Empty : "checked", OnChange = $"preExistingArrangementsChanged(false, {childId});"}) No
                    </div>
                    <div>
                        <span asp-validation-for="PreExistingArrangements"></span>
                    </div>
                </div>

                <div class="form-field @Html.Raw(Model.PreExistingArrangements ? string.Empty : "hidden-field") horizontal-field" id="@($"preexistingArrangementsAmount{childId}")">
                    <label class="form-label">Pre-existing arrangements amount</label>
                    <div class="input-div">
                        <span class="currency-label">£</span><input asp-for="PreExisingArrangementsAmount"/><span class="currency-label"> per week</span>
                    </div>
                    <div>
                        <span asp-validation-for="PreExisingArrangementsAmount"></span>
                    </div>
                </div>

                <div class="remove-button-div horizontal-field">
                    <button type="button" id="removeChildButton" class="removeChildButton remove-child-button" data-removechildbtnid="@childId" data-htmlfieldprefix="@parentHtmlFieldPrefix">
                        <i class="fa fa-trash"></i>
                    </button>
                </div>
            </div>
        }
    </div>
}