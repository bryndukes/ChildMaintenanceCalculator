@using ChildMaintenanceCalculator.Models.ViewModels;
@using  Newtonsoft.Json;
@using HtmlHelpers.BeginCollectionItemCore;

@model Step1ViewModel;

@{
//View creates partials for each Receiving Parent within the view model (1 at first), and within that, the rp partial creates a child partial
//for each child in the receiving parent (1 at first). The fields in those partials map to the objects in their model. HtmlFieldPrefix can be used
//To keep track of which parent a child belongs to.
//When a new parent is added, the whole view model will need to be rebuilt at the server with the additional parent, and the view regenerted.
//When a new child is added, the parent view model will need to be rebuilt at the server and the view regenerated.
}


<div id="Step1Page">

    <form id="step1" asp-controller="Home" asp-action="Step1" method="post">

        <div id="addReceivingParentList">
            @{
                int receivingParentIndex = 0;

                foreach (Step1ReceivingParent receivingParent in Model.Step1ReceivingParents)
                {
                    @await Html.PartialAsync("_AddReceivingParentPartial", receivingParent, new ViewDataDictionary(this.ViewData) { { "receivingParentIndex", receivingParentIndex } })
                    receivingParentIndex++;
                }
            }
        </div>

        <input type="button" id="addReceivingParentButton" value="+" />

        <button type="submit">Next</button>

    </form>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>
        $(document).ready(function () {

            $("#addReceivingParentButton").on('click', function () {
                event.preventDefault();
                //Calculate index for new item
                var newItemIndex = @(Model.Step1ReceivingParents.Count);
                //Make request to Controller for new Partial
                $.ajax({
                    type: "POST",
                    url: "Step1AddNewReceivingParent/?index=" + newItemIndex,
                    success: function (html) {
                        $("#addReceivingParentList").append(html);
                    },
                    error: function (jqHXR, textStatus, errorThrown) {
                        alert("Could not add new item: " + textStatus);
                    }
                });
            });

            $(".addChildButton").on('click', function (evt) {
                console.log("Hit");
                event.preventDefault();
                var targetParent = evt.target.id.substring(14);
                console.log(targetParent);
                var newItemIndex = @(Model.Step1ReceivingParents.SelectMany(p => p.Step1Children).Count());
                $.ajax({
                    type: "POST",
                    url: "Step1AddNewChild/?index=" + newItemIndex,
                    success: function (html) {
                        $("#addChildrenList" + targetParent).append(html);
                    },
                    error: function (jqHXR, textStatus, errorThrown) {
                        alert("Could not add new item: " + textStatus);
                    }
                });
            });

            //TODO: Need to set the New Item Index somehow, maybe pass it back to controller, where it can be added to view data, so that the partial can render properly

        });
    </script>
</div>

